name: pkgportal
services:
  pkgportal-db:
    image: ghcr.io/eps-dockermanager/pkgportal-db:latest
    container_name: pkgportal-db
    volumes:
      - ./data/pkgportal-db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: pkgportal
      POSTGRES_USER: pkgportaluser
      POSTGRES_PASSWORD: pkgportalpwd
      KEYCLOAK_DB: keycloak
      KEYCLOAK_DB_USERNAME: keycloakuser
      KEYCLOAK_DB_PASSWORD: keycloakpwd
    ports:
      - '5434:5432'
    networks:
      - pkgportal-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1024MB'
  keycloak:
    image: ghcr.io/eps-dockermanager/pkgportal-im:latest
    container_name: keycloak-im
    hostname: keycloak-im
    depends_on:
      pkgportal-db:
        condition: service_healthy
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://pkgportal-db:5432/keycloak
      KC_DB_USERNAME: keycloakuser
      KC_DB_PASSWORD: keycloakpwd
      KEYCLOAK_ADMIN: admin
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KEYCLOAK_ACCESS_TOKEN_LIFESPAN: 1h
      KEYCLOAK_LOGLEVEL: ALL
      KC_HOSTNAME_STRICT: false
      KC_EDGE: proxy
      KC_METRICS_PROMETHEUS: true
      KC_HTTP_MANAGEMENT_PORT: 9000
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_PORT: 84
      KC_HTTPS_PORT: 443
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
    ports:
      - '443:443'
      - '8084:84'
      - '9000:9000'
    networks:
      - pkgportal-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:84/health/ready"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: '1024M'
  pkgportal-api:
    image: ghcr.io/eps-dockermanager/pkgportal-api:latest
    container_name: pkgportal-api
    depends_on:
      redis:
        condition: service_healthy
      pkgportal-databridge:
        condition: service_started
      pkgportal-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5020/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    environment:
      HTTP_PORTS: 5020
    ports:
      - '5020:5020'
    volumes:
      - ./shared-data:/App/data
      - ./data/pkgportal-api_data:/App/data
    networks:
      - pkgportal-network
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.pkgportal-api
  pkgportal-databridge:
    image: ghcr.io/eps-dockermanager/pkgportal-databridge:latest
    container_name: pkgportal-databridge
    depends_on:
      redis:
        condition: service_healthy
      liquibase-update:
        condition: service_completed_successfully
      pkgportal-db:
        condition: service_healthy
    environment:
      HTTP_PORTS: 5021
    ports:
      - '5021:5021'
    networks:
      - pkgportal-network
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.pkgportal-databridge
  pkgportal-dataexporter:
    image: ghcr.io/eps-dockermanager/pkgportal-dataexporter:latest
    container_name: pkgportal-dataexporter
    depends_on:
      redis:
        condition: service_healthy
      liquibase-update:
        condition: service_completed_successfully
      pkgportal-db:
        condition: service_healthy
    environment:
      HTTP_PORTS: 5022
    ports:
      - '5022:5022'
    volumes:
      - shared-data:/App/data
      - ./data/pkgportal-api_data:/App/data
    networks:
      - pkgportal-network
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.pkgportal-dataexporter
  notification:
    image: ghcr.io/eps-dockermanager/pkgportal-notification:latest
    container_name: notification
    depends_on:
      redis:
        condition: service_healthy
      liquibase-update:
        condition: service_completed_successfully
      pkgportal-db:
        condition: service_healthy
    environment:
      HTTP_PORTS: 5028
    ports:
      - '5028:5028'
    volumes:
      - ./shared-data:/App/data
      - ./data/pkgportal-api_data:/App/data
    networks:
      - pkgportal-network
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.notification
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - pkgportal-network
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redis_insight
    restart: always
    ports:
      - "8001:5540"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./data/redis_insight_volume_data:/data
    environment:
      - RIHOST=redis
      - RIPORT=6379
    networks:
      - pkgportal-network
  nginx-web:
    image: ghcr.io/eps-dockermanager/pkgportal-web:latest
    container_name: weblb
    ports:
      - 83:83
      - 84:84
      - 8443:443
      - 8444:444
    networks:
      - pkgportal-network
    volumes:
      - ./data/nginx/cert:/cert
  liquibase-update:
    image: ghcr.io/eps-dockermanager/pkgportal-dbmanager:latest
    container_name: liquibase-update
    depends_on:
      pkgportal-db:
        condition: service_healthy
    environment:
    - LIQUIBASE_COMMAND_URL=jdbc:postgresql://pkgportal-db:5432/pkgportal
    - LIQUIBASE_COMMAND_CHANGELOG_FILE=/changelog.xml
    - LIQUIBASE_COMMAND_USERNAME=pkgportaluser
    - LIQUIBASE_COMMAND_PASSWORD=pkgportalpwd
    command: liquibase update
    networks:
      - pkgportal-network
  prometheus:
    image: ghcr.io/eps-dockermanager/custom-prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    volumes:
      - ./data/prometheus_data:/prometheus
    networks:
      - pkgportal-network
  grafana:
    image: ghcr.io/eps-dockermanager/custom-grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
     - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./data/grafana_data:/var/lib/grafana
    networks:
      - pkgportal-network
  postgres-exporter:
    image: ghcr.io/eps-dockermanager/custom-postgres-exporter:latest
    container_name: postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_URI: "postgresql://pkgportaluser:pkgportalpwd@pkgportal-db:5432/pkgportal?sslmode=disable"
      EXTENSION: "pg_stat_statements"
    command:
      - "--extend.query-path=/etc/custom-queries.yaml"
    depends_on:
      pkgportal-db:
        condition: service_healthy
    networks:
      - pkgportal-network
  fluentd:
    image: ghcr.io/eps-dockermanager/pkgportal-fluentd:latest
    container_name: fluentd
    volumes:
      - ./data/logs:/fluentd/log
    ports:
      - "24224:24224"
    environment:
      - FLUENTD_CONF=fluent.conf
    networks:
      - pkgportal-network
networks:
  pkgportal-network: {}
volumes:
  shared-data:
    driver: local
